server.port=8085

spring.aop.proxyTargetClass=true
spring.application.name=apigateway-service

# Define the Eureka server that handles service registration
eureka.instance.hostname=localhost
eureka.instance.port=8761
eureka.client.serviceUrl.defaultZone=http://${eureka.instance.hostname}:${eureka.instance.port}/eureka/

zuul.routes.productservice.url=http://localhost:8090
zuul.routes.account-service.path=/account/**
zuul.routes.authorization-service.sensitiveHeaders=
zuul.routes.authorization-service.path=/authsvc/**
zuul.routes.authorization-service.stripPrefix: false
zuul.routes.add-proxy-headers: true

security.basic.enabled=false
security.oauth2.sso.loginPath: /login
security.oauth2.client.accessTokenUri: http://authorization-service/authsvc/oauth/token
security.oauth2.client.userAuthorizationUri: /authsvc/oauth/authorize
security.oauth2.client.clientId: sampleclient
security.oauth2.client.clientSecret: samplesecret
security.oauth2.resource.tokenInfoUri: http://authorization-service/authsvc/oauth/check_token

logging.level.org.springframework.security: DEBUG